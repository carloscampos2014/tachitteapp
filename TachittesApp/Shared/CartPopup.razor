@using TachittesApp.Services
@inject CartService CartService
@inject NavigationManager NavigationManager

<div class="absolute right-0 w-96 bg-white rounded-lg shadow-xl z-50 border border-red-300 flex flex-col max-h-[500px]">

    @* Cabeçalho fixo *@
    <div class="sticky top-0 bg-white p-4 rounded-t-lg z-10 border-b border-red-300 flex justify-between items-center">
        <h3 class="text-lg font-bold text-red-600">Seu Carrinho</h3>
        <button @onclick="OnClose" class="text-gray-400 hover:text-red-500 transition-colors duration-200">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
        </button>
    </div>

    @if (CartService.Items.Any())
    {
        @* Conteúdo que rola *@
        <div class="overflow-y-auto flex-grow p-4 hide-scrollbar">
            <ul class="divide-y divide-gray-200">
                @foreach (var item in CartService.Items)
                {
                    <li class="py-2 flex flex-col space-y-2">
                        <div class="flex justify-between items-center">
                            <div class="flex items-center space-x-2">
                                <img src="@($"img/{item.Item.Image}")" alt="@item.Item.Name" class="w-12 h-12 object-cover rounded-md" />
                                <span class="font-semibold text-red-800">@item.Item.Name</span>
                            </div>
                            <div class="flex items-center space-x-1">
                                <button @onclick="() => CartService.DecrementQuantity(item)" class="bg-red-500 text-white p-1 rounded-full hover:bg-red-600 transition-colors duration-200">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"
                                         stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                                         class="lucide lucide-minus w-4 h-4">
                                        <path d="M5 12h14" />
                                    </svg>
                                </button>
                                <span class="font-bold text-red-800 text-2xl ">@item.Quantity</span>
                                <button @onclick="() => CartService.AddItem(item)" class="bg-red-500 text-white p-1 rounded-full hover:bg-red-600 transition-colors duration-200">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"
                                         stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                                         class="lucide lucide-plus w-4 h-4">
                                        <path d="M5 12h14" />
                                        <path d="M12 5v14" />
                                    </svg>
                                </button>
                            </div>
                        </div>

                        @if (item.Customizations.Any())
                        {
                            <p class="text-sm text-red-800">
                                @string.Join(", ", item.Customizations.Select(c => c.Name))
                            </p>
                        }

                        <div class="flex justify-between items-center mt-auto">
                            <button @onclick="() => CartService.RemoveItem(item)" class="text-red-500  text-sm hover:text-red-800 transition-colors duration-200">
                                Remover
                            </button>
                            <span class="text-red-600 font-bold text-2xl">@item.TotalPrice.ToString("C", new System.Globalization.CultureInfo("pt-BR"))</span>
                        </div>
                    </li>
                }
            </ul>
        </div>

        @* Rodapé fixo *@
        <div class="sticky bottom-0 bg-white p-4 rounded-b-lg z-10 border-t border-red-300">
            <div class="flex flex-col items-end mb-4">
                <div class="flex justify-between items-center space-x-2">
                    <span class="text-red-600 text-4xl font-bold">@CartService.TotalPrice.ToString("C", new System.Globalization.CultureInfo("pt-BR"))</span>
                </div>
            </div>
            <div class="flex justify-between items-center font-bold text-base">
                <button @onclick="() => CartService.ClearCart()" class="bg-white text-red-500 py-2 px-3 rounded-lg font-bold hover:bg-red-100 transition-colors border border-red-500">
                    Limpar Carrinho
                </button>
                <button @onclick="NavigateToCheckout" class="bg-red-500 text-white py-2 px-3 rounded-lg font-bold hover:bg-red-600 transition-colors">
                    Finalizar Compra
                </button>
            </div>
        </div>
    }
    else
    {
        <div class="p-4 flex-grow flex items-center justify-center">
            <p class="text-red-600 text-center">O carrinho está vazio.</p>
        </div>
    }
</div>

@code {
    [Parameter]
    public EventCallback OnClose { get; set; }

    private void NavigateToCheckout()
    {
        NavigationManager.NavigateTo("checkout");
        OnClose.InvokeAsync();
    }
}